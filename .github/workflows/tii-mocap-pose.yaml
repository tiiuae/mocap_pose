name: tii-mocap-pose

on:
  repository_dispatch:
    types: [fog-ros-baseimage-update]
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - dockerfile: ./Dockerfile
            architecture: amd64
          - dockerfile: ./Dockerfile.riscv64
            architecture: riscv64
    outputs:
      short_git_sha: ${{ steps.vars.outputs.SHORT_GIT_SHA }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,riscv64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "SHORT_GIT_SHA=$calculatedSha" >> $GITHUB_OUTPUT

      - name: Set image tag format without suffix
        run: |
          echo "IMAGE_TAG_FORMAT=type=sha" >> $GITHUB_ENV
        if: github.event_name == 'push'

      - name: Set image tag format with suffix
        # it is possible that run_number should be used instead run_attempt
        # run_attempt is unique number on every run and run_attempt resets to 1 if re-build is not used
        # content of image_sha_tag_suffix is defined in fog-ros-baseimage dispatcher workflow.
        run: |
          echo "IMAGE_TAG_FORMAT=type=sha,suffix=-${{ github.event.client_payload.image_sha_tag_suffix }}" >> $GITHUB_ENV
        if: github.event_name == 'repository_dispatch'

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/tiiuae/tii-mocap-pose
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=raw,value=latest
            ${{ env.IMAGE_TAG_FORMAT }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v4
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container image and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: ${{ matrix.dockerfile-builder }}
          platforms: linux/${{ matrix.architecture }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Disables attestation so it may be needed in the future.
          # Needed because we have to create a manifest list in the next job.
          provenance: false

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create combined image
        run: |
          docker manifest create ghcr.io/tiiuae/tii-mocap-pose:sha-${{ needs.build.outputs.short_git_sha }} \
            --amend ghcr.io/tiiuae/tii-mocap-pose:sha-${{ needs.build.outputs.short_git_sha }}-amd64 \
            --amend ghcr.io/tiiuae/tii-mocap-pose:sha-${{ needs.build.outputs.short_git_sha }}-riscv64
      - name: Push image to the registry
        run: |
          docker manifest push ghcr.io/tiiuae/tii-mocap-pose:sha-${{ needs.build.outputs.short_git_sha }}
